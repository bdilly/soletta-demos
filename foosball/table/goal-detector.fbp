#!/usr/bin/env sol-fbp-runner
# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# This is a subflow used to read variations on an enlightened light sensor.
# Everytime a ball pass between the led and light sensor variations will
# be detected and a pulse will be sent through an exported port.
#
# Using one on each side of the foosball table make it possible to identify
# when goals happen.
#
# Exported output ports:
#  * GOAL (pulse)

OUTPORT=Goal.OUT:GOAL

# Turn led on
Led(DetectorLed)
True(constant/boolean:value=true)
True OUT -> IN Led

# Send pulse when measured light is below 70% of env light
# It indicates a ball has passed in front the led
ValuesBuffer(int/buffer:circular=true, samples=10, operation="mean", timeout=1)
Threshold(float/multiplication)
Rate(constant/float:value=0.7)
BelowThreshold(int/less)

# Filter is required to avoid multiple consecutive readings of light
# below threshold to be interpreted as multiple goals.
Filter(filter-repeated/boolean)
Goal(converter/boolean-to-empty)

Sensor(DetectorLightSensor)

Sensor OUT -> IN ValuesBuffer
ValuesBuffer OUT -> IN _(converter/int-to-float) OUT -> OPERAND[0] Threshold
Rate OUT -> OPERAND[1] Threshold

Sensor OUT -> IN[0] BelowThreshold
Threshold OUT -> IN _(converter/float-to-int) OUT -> IN[1] BelowThreshold
BelowThreshold OUT -> IN Filter OUT -> PULSE_IF_TRUE Goal
